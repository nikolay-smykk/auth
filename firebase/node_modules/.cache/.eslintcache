[{"/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/index.js":"1","/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/App.js":"2","/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/components/Header.js":"3","/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/components/Footer.js":"4","/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/components/Cards.js":"5","/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/const/data.js":"6"},{"size":220,"mtime":1649179308046,"results":"7","hashOfConfig":"8"},{"size":337,"mtime":1649535773685,"results":"9","hashOfConfig":"8"},{"size":16277,"mtime":1649534830159,"results":"10","hashOfConfig":"8"},{"size":797,"mtime":1649265939284,"results":"11","hashOfConfig":"8"},{"size":1067,"mtime":1649536102521,"results":"12","hashOfConfig":"8"},{"size":4812,"mtime":1649533828098,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"41ca4",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/index.js",[],[],["34","35"],"/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/App.js",[],[],"/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/components/Header.js",["36"],[],"/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from \"react\"\nimport { Popover, Transition } from \"@headlessui/react\"\nimport {\n  BookmarkAltIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  CursorClickIcon,\n  MenuIcon,\n  PhoneIcon,\n  PlayIcon,\n  RefreshIcon,\n  ShieldCheckIcon,\n  SupportIcon,\n  ViewGridIcon,\n  XIcon,\n} from \"@heroicons/react/outline\"\nimport { ChevronDownIcon } from \"@heroicons/react/solid\"\n\nconst solutions = [\n  {\n    name: \"Analytics\",\n    description:\n      \"Get span better understanding of where your traffic is coming from.\",\n    href: \"#\",\n    icon: ChartBarIcon,\n  },\n  {\n    name: \"Engagement\",\n    description: \"Speak directly to your customers in span more meaningful way.\",\n    href: \"#\",\n    icon: CursorClickIcon,\n  },\n  {\n    name: \"Security\",\n    description: \"Your customers' data will be safe and secure.\",\n    href: \"#\",\n    icon: ShieldCheckIcon,\n  },\n  {\n    name: \"Integrations\",\n    description: \"Connect with third-party tools that you're already using.\",\n    href: \"#\",\n    icon: ViewGridIcon,\n  },\n  {\n    name: \"Automations\",\n    description: \"Build strategic funnels that will drive your customers to convert\",\n    href: \"#\",\n    icon: RefreshIcon,\n  },\n]\nconst callsToAction = [\n  { name: \"Watch Demo\", href: \"#\", icon: PlayIcon },\n  { name: \"Contact Sales\", href: \"#\", icon: PhoneIcon },\n]\nconst resources = [\n  {\n    name: \"Help Center\",\n    description:\n      \"Get all of your questions answered in our forums or contact support.\",\n    href: \"#\",\n    icon: SupportIcon,\n  },\n  {\n    name: \"Guides\",\n    description: \"Learn how to maximize our platform to get the most out of it.\",\n    href: \"#\",\n    icon: BookmarkAltIcon,\n  },\n  {\n    name: \"Events\",\n    description: \"See what meet-ups and other events we might be planning near you.\",\n    href: \"#\",\n    icon: CalendarIcon,\n  },\n  {\n    name: \"Security\",\n    description: \"Understand how we take your privacy seriously.\",\n    href: \"#\",\n    icon: ShieldCheckIcon,\n  },\n]\nconst recentPosts = [\n  { id: 1, name: \"Boost your conversion rate\", href: \"#\" },\n  {\n    id: 2,\n    name: \"How to use search engine optimization to drive traffic to your site\",\n    href: \"#\",\n  },\n  { id: 3, name: \"Improve your customer experience\", href: \"#\" },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \")\n}\n\nexport const Header = () => {\n  return (\n    <Popover className=\"relative bg-white\">\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6\">\n        <div className=\"flex items-center justify-between border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n          <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n            <span href=\"#\">\n              <span className=\"sr-only\">Workflow</span>\n              <img\n                className=\"h-8 w-auto sm:h-10\"\n                src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                alt=\"\"\n              />\n            </span>\n          </div>\n          <div className=\"-my-2 -mr-2 md:hidden\">\n            <Popover.Button className=\"inline-flex items-center justify-center rounded-md bg-white p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n              <span className=\"sr-only\">Open menu</span>\n              <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </Popover.Button>\n          </div>\n          <Popover.Group as=\"nav\" className=\"hidden space-x-10 md:flex\">\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNames(\n                      open ? \"text-gray-900\" : \"text-gray-500\",\n                      \"group inline-flex items-center rounded-md bg-white text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    )}\n                  >\n                    <span>Solutions</span>\n                    <ChevronDownIcon\n                      className={classNames(\n                        open ? \"text-gray-600\" : \"text-gray-400\",\n                        \"ml-2 h-5 w-5 group-hover:text-gray-500\"\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute z-10 -ml-4 mt-3 w-screen max-w-md transform px-2 sm:px-0 lg:left-1/2 lg:ml-0 lg:-translate-x-1/2\">\n                      <div className=\"overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {solutions.map((item) => (\n                            <span\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 flex items-start rounded-lg p-3 hover:bg-gray-50\"\n                            >\n                              <item.icon\n                                className=\"h-6 w-6 flex-shrink-0 text-indigo-600\"\n                                aria-hidden=\"true\"\n                              />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">\n                                  {item.name}\n                                </p>\n                                <p className=\"mt-1 text-sm text-gray-500\">\n                                  {item.description}\n                                </p>\n                              </div>\n                            </span>\n                          ))}\n                        </div>\n                        <div className=\"space-y-6 bg-gray-50 px-5 py-5 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8\">\n                          {callsToAction.map((item) => (\n                            <div key={item.name} className=\"flow-root\">\n                              <span\n                                href={item.href}\n                                className=\"-m-3 flex items-center rounded-md p-3 text-base font-medium text-gray-900 hover:bg-gray-100\"\n                              >\n                                <item.icon\n                                  className=\"h-6 w-6 flex-shrink-0 text-gray-400\"\n                                  aria-hidden=\"true\"\n                                />\n                                <span className=\"ml-3\">{item.name}</span>\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n\n            <span\n              href=\"#\"\n              className=\"text-base font-medium text-gray-500 hover:text-gray-900\"\n            >\n              Pricing\n            </span>\n            <span\n              href=\"#\"\n              className=\"text-base font-medium text-gray-500 hover:text-gray-900\"\n            >\n              Docs\n            </span>\n\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNames(\n                      open ? \"text-gray-900\" : \"text-gray-500\",\n                      \"group inline-flex items-center rounded-md bg-white text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    )}\n                  >\n                    <span>More</span>\n                    <ChevronDownIcon\n                      className={classNames(\n                        open ? \"text-gray-600\" : \"text-gray-400\",\n                        \"ml-2 h-5 w-5 group-hover:text-gray-500\"\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute left-1/2 z-10 mt-3 w-screen max-w-md -translate-x-1/2 transform px-2 sm:px-0\">\n                      <div className=\"overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {resources.map((item) => (\n                            <span\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 flex items-start rounded-lg p-3 hover:bg-gray-50\"\n                            >\n                              <item.icon\n                                className=\"h-6 w-6 flex-shrink-0 text-indigo-600\"\n                                aria-hidden=\"true\"\n                              />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">\n                                  {item.name}\n                                </p>\n                                <p className=\"mt-1 text-sm text-gray-500\">\n                                  {item.description}\n                                </p>\n                              </div>\n                            </span>\n                          ))}\n                        </div>\n                        <div className=\"bg-gray-50 px-5 py-5 sm:px-8 sm:py-8\">\n                          <div>\n                            <h3 className=\"text-sm font-medium uppercase tracking-wide text-gray-500\">\n                              Recent Posts\n                            </h3>\n                            <ul role=\"list\" className=\"mt-4 space-y-4\">\n                              {recentPosts.map((post) => (\n                                <li key={post.id} className=\"truncate text-base\">\n                                  <span\n                                    href={post.href}\n                                    className=\"font-medium text-gray-900 hover:text-gray-700\"\n                                  >\n                                    {post.name}\n                                  </span>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          <div className=\"mt-5 text-sm\">\n                            <span\n                              href=\"#\"\n                              className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                            >\n                              {\" \"}\n                              View all posts <span aria-hidden=\"true\">&rarr;</span>\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </Popover.Group>\n          <div className=\"hidden items-center justify-end md:flex md:flex-1 lg:w-0\">\n            <span\n              href=\"#\"\n              className=\"whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900\"\n            >\n              Sign in\n            </span>\n            <span\n              href=\"#\"\n              className=\"ml-8 inline-flex items-center justify-center whitespace-nowrap rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700\"\n            >\n              Sign up\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"duration-200 ease-out\"\n        enterFrom=\"opacity-0 scale-95\"\n        enterTo=\"opacity-100 scale-100\"\n        leave=\"duration-100 ease-in\"\n        leaveFrom=\"opacity-100 scale-100\"\n        leaveTo=\"opacity-0 scale-95\"\n      >\n        <Popover.Panel\n          focus\n          className=\"absolute inset-x-0 top-0 origin-top-right transform p-2 transition md:hidden\"\n        >\n          <div className=\"divide-y-2 divide-gray-50 rounded-lg bg-white shadow-lg ring-1 ring-black ring-opacity-5\">\n            <div className=\"px-5 pt-5 pb-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <img\n                    className=\"h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"-mr-2\">\n                  <Popover.Button className=\"inline-flex items-center justify-center rounded-md bg-white p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </Popover.Button>\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <nav className=\"grid gap-y-8\">\n                  {solutions.map((item) => (\n                    <span\n                      key={item.name}\n                      href={item.href}\n                      className=\"-m-3 flex items-center rounded-md p-3 hover:bg-gray-50\"\n                    >\n                      <item.icon\n                        className=\"h-6 w-6 flex-shrink-0 text-indigo-600\"\n                        aria-hidden=\"true\"\n                      />\n                      <span className=\"ml-3 text-base font-medium text-gray-900\">\n                        {item.name}\n                      </span>\n                    </span>\n                  ))}\n                </nav>\n              </div>\n            </div>\n            <div className=\"space-y-6 py-6 px-5\">\n              <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                <span\n                  href=\"#\"\n                  className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                >\n                  Pricing\n                </span>\n\n                <span\n                  href=\"#\"\n                  className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                >\n                  Docs\n                </span>\n                {resources.map((item) => (\n                  <span\n                    key={item.name}\n                    href={item.href}\n                    className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                  >\n                    {item.name}\n                  </span>\n                ))}\n              </div>\n              <div>\n                <span\n                  href=\"#\"\n                  className=\"flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700\"\n                >\n                  Sign up\n                </span>\n                <p className=\"mt-6 text-center text-base font-medium text-gray-500\">\n                  Existing customer?{\" \"}\n                  <span href=\"#\" className=\"text-indigo-600 hover:text-indigo-500\">\n                    Sign in\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </Popover.Panel>\n      </Transition>\n    </Popover>\n  )\n}\n","/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/components/Footer.js",[],[],"/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/components/Cards.js",[],[],"/Users/nikolajsmyk/Documents/GitHub/auth/firebase/src/const/data.js",[],[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":265,"column":29,"nodeType":"43","endLine":265,"endColumn":72},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]